// Layout na podstawie ng-materials
// https://material.angularjs.org/latest/layout/alignment

@mixin layout($modes: 'row') {
  /*
   * Usage:
   * @include layout('row' 'start-stretch');
   * 
   */
  
  -webkit-box-direction: normal;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  
  @each $mode in $modes {
    
    // row
    @if $mode == 'row' {
      -webkit-box-orient: horizontal;
      -webkit-flex-direction: row;
      flex-direction: row;
    }
    
    // column
    @if $mode == 'column' {
      -webkit-box-orient: vertical;
      -webkit-flex-direction: column;
      flex-direction: column;
    }
    
    // start-stretch
    @if $mode == 'start-stretch' {
      -webkit-align-content: stretch;
      -webkit-box-align: stretch;
      -webkit-align-items: stretch;
      align-content: stretch;
      align-items: stretch;      
    }  
     
    @if $mode == 'start' or $mode == 'start-center' or $mode == 'start-end' or $mode == 'start-start' or $mode == 'start-stretch' {
      -webkit-box-pack: start;
      -webkit-justify-content: flex-start;
      justify-content: flex-start
    }

    @if $mode == 'center' or $mode == 'center-center' or $mode == 'center-end' or $mode == 'center-start' or $mode == 'center-stretch' {
      -webkit-box-pack: center;
      -webkit-justify-content: center;
      justify-content: center;
    }

    @if $mode == 'end' or $mode == 'end-center' or $mode == 'end-end' or $mode == 'end-start' or $mode == 'end-stretch' {
      -webkit-box-pack: end;
      -webkit-justify-content: flex-end;
      justify-content: flex-end;
    }

    @if $mode == 'space-around' or $mode == 'space-around-center' or $mode == 'space-around-end' or $mode == 'space-around-start' or $mode == 'space-around-stretch' {
      -webkit-justify-content: space-around;
      justify-content: space-around
    }
    
    @if $mode == 'space-between' or $mode == 'space-between-center' or $mode == 'space-between-end' or $mode == 'space-between-start' or $mode == 'space-between-stretch' {
      -webkit-box-pack: justify;
      -webkit-justify-content: space-between;
      justify-content: space-between;
    }

    @if $mode == 'center-start' or $mode == 'end-start' or $mode == 'space-around-start' or $mode == 'space-between-start' or $mode == 'start-start' {
      -webkit-box-align: start;
      -webkit-align-items: flex-start;
      -webkit-align-content: flex-start;
      align-items: flex-start;
      align-content: flex-start;
    }

    @if $mode == 'center-center' or $mode == 'end-center' or $mode == 'space-around-center' or $mode == 'space-between-center' or $mode == 'start-center' {
      -webkit-box-align: center;
      -webkit-align-items: center;
      -webkit-align-content: center;
      align-items: center;
      align-content: center;
      max-width: 100%;
      
      & > * {
        max-width: 100%;
        box-sizing: border-box;
      }
      
    }

    @if $mode == 'center-end' or $mode == 'end-end' or $mode == 'space-around-end' or $mode == 'space-between-end' or $mode == 'start-end' {
      -webkit-box-align: end;
      -webkit-align-items: flex-end;
      -webkit-align-content: flex-end;
      align-items: flex-end;
      align-content: flex-end;
    }

    @if $mode == 'center-stretch' or $mode == 'end-stretch' or $mode == 'space-around-stretch' or $mode == 'space-between-stretch' or $mode == 'start-stretch' {
      -webkit-box-align: stretch;
      -webkit-align-items: stretch;
      -webkit-align-content: stretch;
      align-items: stretch;
      align-content: stretch;
    }
      
  }
}