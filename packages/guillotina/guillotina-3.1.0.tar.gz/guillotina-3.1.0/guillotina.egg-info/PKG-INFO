Metadata-Version: 1.1
Name: guillotina
Version: 3.1.0
Summary: asyncio REST API Resource database
Home-page: https://github.com/plone/guillotina
Author: Ramon & Asko & Nathan
Author-email: ramon@plone.org
License: BSD
Description: Introduction
        ============
        
        .. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat
           :target: http://guillotina.readthedocs.io/en/latest/
        
        .. image:: https://travis-ci.org/plone/guillotina.svg?branch=master
           :target: https://travis-ci.org/plone/guillotina
        
        .. image:: https://codecov.io/gh/plone/guillotina/branch/master/graph/badge.svg
           :target: https://codecov.io/gh/plone/guillotina/branch/master
           :alt: Test Coverage
        
        .. image:: https://img.shields.io/pypi/pyversions/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina/
           :alt: Python Versions
        
        .. image:: https://img.shields.io/pypi/v/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina
        
        .. image:: https://img.shields.io/pypi/l/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina/
           :alt: License
        
        .. image:: https://badges.gitter.im/plone/guillotina.png
           :target: https://gitter.im/plone/guillotina
           :alt: Chat
        
        Please `read the detailed docs <http://guillotina.readthedocs.io/en/latest/>`_
        
        
        This is the working project of the next generation Guillotina server based on asyncio.
        
        
        Dependencies
        ------------
        
        * python >= 3.6
        * postgresql >= 9.6
        
        
        Quickstart
        ----------
        
        We use pip::
        
          pip install guillotina
        
        
        Run postgresql
        --------------
        
        If you don't have a postgresql server to play with, you can run one easily
        with docker.
        
        Download and start the docker container by running::
        
          make run-postgres
        
        
        
        Run the server
        --------------
        
        To run the server::
        
            g
        
        
        Then...
        
            curl http://localhost:8080
        
        
        Or, better yet, use postman to start playing with API.
        
        
        Getting started with development
        --------------------------------
        
        Using pip::
        
          ./bin/pip install requirements.txt
          ./bin/pip install -e .[test]
        
        
        Run tests
        ---------
        
        We're using pytest::
        
            ./bin/pytest guillotina
        
        and for test coverage::
        
            ./bin/pytest --cov=guillotina guillotina/
        
        With file watcher...
        
            ./bin/ptw guillotina --runner=./bin/py.test
        
        
        To run tests with cockroach db::
        
           USE_COCKROACH=true ./bin/pytest guillotina
        
        Default
        -------
        
        Default root access can be done with AUTHORIZATION header : Basic root:root
        
        
        Docker
        ------
        
        You can also run Guillotina with Docker!
        
        
        First, run postgresql::
        
            docker run --rm \
                -e POSTGRES_DB=guillotina \
                -e POSTGRES_USER=guillotina \
                -p 127.0.0.1:5432:5432 \
                --name postgres \
                postgres:9.6
        
        Then, run guillotina::
        
            docker run --rm -it \
                --link=postgres -p 127.0.0.1:8080:8080 \
                guillotina/guillotina:latest \
                g -c '{"databases": [{"db": {"storage": "postgresql", "dsn": "postgres://guillotina:@postgres/guillotina"}}], "root_user": {"password": "root"}}'
        
        
        This assumes you have a config.yaml in your current working directory
        
        
        Chat
        ----
        
        Join us to talk about Guillotina at https://gitter.im/plone/guillotina
        
        
        3.1.0 (2018-04-18)
        ------------------
        
        - Use unique constraint instead of doing lookups on existing content for inserts
          [vangheem]
        
        - On content creation, use summary serialization instead of full object serialization
          [vangheem]
        
        
        3.0.8 (2018-04-06)
        ------------------
        
        - Fix security on views were not checked correctly as the configured functions
          are all the same local class
          [ramon]
        
        - OPTION method not working due to not beeing registered normally as
          its a special case for CORS
          [ramon]
        
        
        3.0.7 (2018-04-04)
        ------------------
        
        - Fix `change_transaction_strategy` method AttributeError
          [vangheem]
        
        
        3.0.6 (2018-04-03)
        ------------------
        
        - Fix registration issue when multiple routes are registered against the
          same service class
          [vangheem]
        
        - Do not store request object on transaction manager object to prevent
          situations where the wrong transaction will get retrieved
          [vangheem]
        
        
        3.0.5 (2018-04-03)
        ------------------
        
        - Make sure to clean up manually registered utilities
          [vangheem]
        
        
        3.0.4 (2018-04-03)
        ------------------
        
        - Use IPostgresStorage for PG storage
          [vangheem]
        
        
        3.0.3 (2018-04-03)
        ------------------
        
        - Fix tests to be more isolated between runs
          [vangheem]
        
        
        3.0.2 (2018-04-03)
        ------------------
        
        - psycopg2 is an optional test dependency
          [vangheem]
        
        
        3.0.1 (2018-04-03)
        ------------------
        
        - Add full support for `DUMMY` and `DUMMY_FILE` databases
          [vangheem]
        
        
        3.0.0a1 (2017-12-30)
        --------------------
        
        - Fix issue with multiple databases mounted
        
        - Add support for dynamic database mappings
        
        - Add route support
        
        - Remove traversable views, add support for `prepare` method on class views
        
        
        2.5.12 (2018-04-02)
        -------------------
        
        - Do not swallow any exceptions on commit.
          [vangheem]
        
        
        2.5.11 (2018-03-28)
        -------------------
        
        - Fix error loading settings
          [vangheem]
        
        
        2.5.10 (2018-03-26)
        -------------------
        
        - Make sure to clear commit hook on tcp begin
          [vangheem]
        
        - Add save method to upload data manager so saving data can be defered to
          after commit hook
          [vangheem]
        
        
        2.5.9 (2018-03-22)
        ------------------
        
        - return 404 when attempting to download file that is missing
          [vangheem]
        
        
        2.5.8 (2018-03-22)
        ------------------
        
        - Fix getting filename for file downloads
          [vangheem]
        
        
        2.5.7 (2018-03-21)
        ------------------
        
        - Only do commit and voting if we have objects to do it with
          [vangheem]
        
        
        2.5.6 (2018-03-21)
        ------------------
        
        - Make sure to set size when deserializing files from base64
          [vangheem]
        
        
        2.5.5 (2018-03-20)
        ------------------
        
        - Fix TUS upload with zero length files
          [vangheem]
        
        
        2.5.4 (2018-03-19)
        ------------------
        
        - `save_file` can provide size value
          [vangheem]
        
        ...
        
        You are seeing a truncated changelog.
        
        You can read the `changelog file <https://github.com/plone/guillotina/blob/master/CHANGELOG.rst>`_
        for a complete list.
        
        
Keywords: asyncio,REST,Framework,transactional
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries :: Python Modules
