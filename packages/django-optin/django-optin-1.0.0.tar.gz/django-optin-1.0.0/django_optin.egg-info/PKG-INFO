Metadata-Version: 1.1
Name: django-optin
Version: 1.0.0
Summary: A simple Django app to manage User Preferences.
Home-page: https://github.com/HenryMehta/django-optin
Author: Henry Mehta
Author-email: hjsmehta@gmail.com
License: MIT License
Description: =====
        OptIn
        =====
        
        OptIn is a simple Django app to manage User Preferences. For each
        Category, Users can select Yes or No.
        
        You set the Categories through the Admin panel
        
        Detailed documentation is needs writing.
        
        Quick start
        -----------
        
        1. Add "optin" to your INSTALLED_APPS setting like this::
        
            INSTALLED_APPS = [
                ...
                'optin',
            ]
        
        2. Include the polls URLconf in your project urls.py like this::
        
            path('optin/', include('optin.urls')),
        
        3. Run `python manage.py migrate` to create the polls models.
        
        4. Start the development server and visit http://127.0.0.1:8000/admin/
           to create a Category (you'll need the Admin app enabled).
        
        5. Add <a href="{% url 'optin:user_opt_selection' user.id %}">OptIns</a> 
           to a template to provide a link.  Please note, User must be logged in.
        
        6. Visit http://127.0.0.1:8000/, Login and click link to set preferences.
        
        
        Settings
        --------
        
        OptIn uses AUTH_USER_MODEL as the default user model.  It will default to
        the Django User model if AUTH_USER_MODEL is not set in settings.py
        
        OPTIN_SETTINGS_UPDATE_MESSAGE_BOOLEAN:
        If True, on successful update of preferences the OPTIN_SETTINGS_UPDATE_MESSAGE
        is presented to User (via django messages).
        Default = True
        
        OPTIN_SETTINGS_UPDATE_MESSAGE:
        Message displayed to User if OPTIN_SETTINGS_UPDATE_MESSAGE_BOOLEAN set to True.
        Default = 'Preferences Updated'
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.11
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
