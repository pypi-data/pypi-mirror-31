- hosts: all
  name: Autoconverted job legacy-vitrage-dsvm-datasources-py35 from old job gate-vitrage-dsvm-datasources-py35-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin vitrage git://git.openstack.org/openstack/vitrage
          enable_plugin vitrage-tempest-plugin git://git.openstack.org/openstack/vitrage-tempest-plugin

          # swift is not ready for python3 yet
          disable_service s-account
          disable_service s-container
          disable_service s-object
          disable_service s-proxy

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export PROJECTS="openstack/python-vitrageclient $PROJECTS"
          export PROJECTS="openstack/aodh $PROJECTS"
          export PROJECTS="openstack/mistral $PROJECTS"
          export PROJECTS="openstack/vitrage $PROJECTS"
          export PROJECTS="openstack/vitrage-tempest-plugin $PROJECTS"
          export ENABLED_SERVICES=tempest
          export DEVSTACK_GATE_TEMPEST_ALL_PLUGINS=1

          if [ "py35" == "py35" ] ; then
             export DEVSTACK_GATE_USE_PYTHON3=True
          else
             export DEVSTACK_GATE_USE_PYTHON3=False
          fi

          function pre_test_hook {
              source $BASE/new/vitrage/devstack/pre_test_hook.sh
          }
          export -f pre_test_hook

          function gate_hook {
              source $BASE/new/vitrage/devstack/gate_hook.sh
          }
          export -f gate_hook

          function post_test_hook {
              source $BASE/new/vitrage/devstack/post_test_hook.sh 'datasources'
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
