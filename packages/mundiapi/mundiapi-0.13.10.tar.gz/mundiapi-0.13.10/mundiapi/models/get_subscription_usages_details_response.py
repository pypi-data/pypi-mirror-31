# -*- coding: utf-8 -*-

"""
    mundiapi.models.get_subscription_usages_details_response

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""
import mundiapi.models.get_period_response
import mundiapi.models.get_usage_response

class GetSubscriptionUsagesDetailsResponse(object):

    """Implementation of the 'GetSubscriptionUsagesDetailsResponse' model.

    TODO: type model description here.

    Attributes:
        subscription_id (string): Subscription Identifier
        total_amount (int): Current Invoice Amount
        period (GetPeriodResponse): Period Details
        usages (list of GetUsageResponse): Usages Details

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "subscription_id":'subscription_id',
        "total_amount":'total_amount',
        "period":'Period',
        "usages":'Usages'
    }

    def __init__(self,
                 subscription_id=None,
                 total_amount=None,
                 period=None,
                 usages=None):
        """Constructor for the GetSubscriptionUsagesDetailsResponse class"""

        # Initialize members of the class
        self.subscription_id = subscription_id
        self.total_amount = total_amount
        self.period = period
        self.usages = usages


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        subscription_id = dictionary.get('subscription_id')
        total_amount = dictionary.get('total_amount')
        period = mundiapi.models.get_period_response.GetPeriodResponse.from_dictionary(dictionary.get('Period')) if dictionary.get('Period') else None
        usages = None
        if dictionary.get('Usages') != None:
            usages = list()
            for structure in dictionary.get('Usages'):
                usages.append(mundiapi.models.get_usage_response.GetUsageResponse.from_dictionary(structure))

        # Return an object of this model
        return cls(subscription_id,
                   total_amount,
                   period,
                   usages)


