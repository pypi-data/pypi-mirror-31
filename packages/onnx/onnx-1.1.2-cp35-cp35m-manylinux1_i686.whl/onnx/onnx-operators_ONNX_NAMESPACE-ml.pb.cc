// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx-operators_ONNX_NAMESPACE-ml.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "onnx-operators_ONNX_NAMESPACE-ml.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace onnx {

namespace {

const ::google::protobuf::Descriptor* OperatorProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperatorProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* OperatorProto_OperatorStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* OperatorSetProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperatorSetProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto() {
  protobuf_AddDesc_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "onnx-operators_ONNX_NAMESPACE-ml.proto");
  GOOGLE_CHECK(file != NULL);
  OperatorProto_descriptor_ = file->message_type(0);
  static const int OperatorProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, op_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, since_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, doc_string_),
  };
  OperatorProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OperatorProto_descriptor_,
      OperatorProto::default_instance_,
      OperatorProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OperatorProto));
  OperatorProto_OperatorStatus_descriptor_ = OperatorProto_descriptor_->enum_type(0);
  OperatorSetProto_descriptor_ = file->message_type(1);
  static const int OperatorSetProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, ir_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, ir_version_prerelease_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, ir_build_metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, opset_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, operator__),
  };
  OperatorSetProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OperatorSetProto_descriptor_,
      OperatorSetProto::default_instance_,
      OperatorSetProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OperatorSetProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OperatorProto_descriptor_, &OperatorProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OperatorSetProto_descriptor_, &OperatorSetProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto() {
  delete OperatorProto::default_instance_;
  delete OperatorProto_reflection_;
  delete OperatorSetProto::default_instance_;
  delete OperatorSetProto_reflection_;
}

void protobuf_AddDesc_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ONNX_NAMESPACE::protobuf_AddDesc_onnx_5fONNX_5fNAMESPACE_2dml_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&onnx-operators_ONNX_NAMESPACE-ml.proto"
    "\022\004onnx\032\034onnx_ONNX_NAMESPACE-ml.proto\"\257\001\n"
    "\rOperatorProto\022\017\n\007op_type\030\001 \001(\t\022\025\n\rsince"
    "_version\030\002 \001(\003\0222\n\006status\030\003 \001(\0162\".onnx.Op"
    "eratorProto.OperatorStatus\022\022\n\ndoc_string"
    "\030\n \001(\t\".\n\016OperatorStatus\022\020\n\014EXPERIMENTAL"
    "\020\000\022\n\n\006STABLE\020\001\"\321\001\n\020OperatorSetProto\022\r\n\005m"
    "agic\030\001 \001(\t\022\022\n\nir_version\030\002 \001(\005\022\035\n\025ir_ver"
    "sion_prerelease\030\003 \001(\t\022\031\n\021ir_build_metada"
    "ta\030\007 \001(\t\022\016\n\006domain\030\004 \001(\t\022\025\n\ropset_versio"
    "n\030\005 \001(\003\022\022\n\ndoc_string\030\006 \001(\t\022%\n\010operator\030"
    "\010 \003(\0132\023.onnx.OperatorProto", 466);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "onnx-operators_ONNX_NAMESPACE-ml.proto", &protobuf_RegisterTypes);
  OperatorProto::default_instance_ = new OperatorProto();
  OperatorSetProto::default_instance_ = new OperatorSetProto();
  OperatorProto::default_instance_->InitAsDefaultInstance();
  OperatorSetProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto {
  StaticDescriptorInitializer_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto() {
    protobuf_AddDesc_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto();
  }
} static_descriptor_initializer_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* OperatorProto_OperatorStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorProto_OperatorStatus_descriptor_;
}
bool OperatorProto_OperatorStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const OperatorProto_OperatorStatus OperatorProto::EXPERIMENTAL;
const OperatorProto_OperatorStatus OperatorProto::STABLE;
const OperatorProto_OperatorStatus OperatorProto::OperatorStatus_MIN;
const OperatorProto_OperatorStatus OperatorProto::OperatorStatus_MAX;
const int OperatorProto::OperatorStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int OperatorProto::kOpTypeFieldNumber;
const int OperatorProto::kSinceVersionFieldNumber;
const int OperatorProto::kStatusFieldNumber;
const int OperatorProto::kDocStringFieldNumber;
#endif  // !_MSC_VER

OperatorProto::OperatorProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.OperatorProto)
}

void OperatorProto::InitAsDefaultInstance() {
}

OperatorProto::OperatorProto(const OperatorProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.OperatorProto)
}

void OperatorProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  op_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  since_version_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OperatorProto::~OperatorProto() {
  // @@protoc_insertion_point(destructor:onnx.OperatorProto)
  SharedDtor();
}

void OperatorProto::SharedDtor() {
  if (op_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete op_type_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (this != default_instance_) {
  }
}

void OperatorProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorProto_descriptor_;
}

const OperatorProto& OperatorProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto();
  return *default_instance_;
}

OperatorProto* OperatorProto::default_instance_ = NULL;

OperatorProto* OperatorProto::New() const {
  return new OperatorProto;
}

void OperatorProto::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_op_type()) {
      if (op_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        op_type_->clear();
      }
    }
    since_version_ = GOOGLE_LONGLONG(0);
    status_ = 0;
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OperatorProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.OperatorProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string op_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_type().data(), this->op_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "op_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_since_version;
        break;
      }

      // optional int64 since_version = 2;
      case 2: {
        if (tag == 16) {
         parse_since_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &since_version_)));
          set_has_since_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional .onnx.OperatorProto.OperatorStatus status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::onnx::OperatorProto_OperatorStatus_IsValid(value)) {
            set_status(static_cast< ::onnx::OperatorProto_OperatorStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 10;
      case 10: {
        if (tag == 82) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.OperatorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.OperatorProto)
  return false;
#undef DO_
}

void OperatorProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.OperatorProto)
  // optional string op_type = 1;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op_type(), output);
  }

  // optional int64 since_version = 2;
  if (has_since_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->since_version(), output);
  }

  // optional .onnx.OperatorProto.OperatorStatus status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->doc_string(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.OperatorProto)
}

::google::protobuf::uint8* OperatorProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.OperatorProto)
  // optional string op_type = 1;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op_type(), target);
  }

  // optional int64 since_version = 2;
  if (has_since_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->since_version(), target);
  }

  // optional .onnx.OperatorProto.OperatorStatus status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->doc_string(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.OperatorProto)
  return target;
}

int OperatorProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string op_type = 1;
    if (has_op_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op_type());
    }

    // optional int64 since_version = 2;
    if (has_since_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->since_version());
    }

    // optional .onnx.OperatorProto.OperatorStatus status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string doc_string = 10;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OperatorProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OperatorProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OperatorProto::MergeFrom(const OperatorProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op_type()) {
      set_op_type(from.op_type());
    }
    if (from.has_since_version()) {
      set_since_version(from.since_version());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OperatorProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorProto::CopyFrom(const OperatorProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperatorProto::IsInitialized() const {

  return true;
}

void OperatorProto::Swap(OperatorProto* other) {
  if (other != this) {
    std::swap(op_type_, other->op_type_);
    std::swap(since_version_, other->since_version_);
    std::swap(status_, other->status_);
    std::swap(doc_string_, other->doc_string_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OperatorProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperatorProto_descriptor_;
  metadata.reflection = OperatorProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OperatorSetProto::kMagicFieldNumber;
const int OperatorSetProto::kIrVersionFieldNumber;
const int OperatorSetProto::kIrVersionPrereleaseFieldNumber;
const int OperatorSetProto::kIrBuildMetadataFieldNumber;
const int OperatorSetProto::kDomainFieldNumber;
const int OperatorSetProto::kOpsetVersionFieldNumber;
const int OperatorSetProto::kDocStringFieldNumber;
const int OperatorSetProto::kOperatorFieldNumber;
#endif  // !_MSC_VER

OperatorSetProto::OperatorSetProto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.OperatorSetProto)
}

void OperatorSetProto::InitAsDefaultInstance() {
}

OperatorSetProto::OperatorSetProto(const OperatorSetProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.OperatorSetProto)
}

void OperatorSetProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  magic_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_version_ = 0;
  ir_version_prerelease_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_build_metadata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opset_version_ = GOOGLE_LONGLONG(0);
  doc_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OperatorSetProto::~OperatorSetProto() {
  // @@protoc_insertion_point(destructor:onnx.OperatorSetProto)
  SharedDtor();
}

void OperatorSetProto::SharedDtor() {
  if (magic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete magic_;
  }
  if (ir_version_prerelease_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ir_version_prerelease_;
  }
  if (ir_build_metadata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ir_build_metadata_;
  }
  if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete domain_;
  }
  if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete doc_string_;
  }
  if (this != default_instance_) {
  }
}

void OperatorSetProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorSetProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorSetProto_descriptor_;
}

const OperatorSetProto& OperatorSetProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto();
  return *default_instance_;
}

OperatorSetProto* OperatorSetProto::default_instance_ = NULL;

OperatorSetProto* OperatorSetProto::New() const {
  return new OperatorSetProto;
}

void OperatorSetProto::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    if (has_magic()) {
      if (magic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        magic_->clear();
      }
    }
    ir_version_ = 0;
    if (has_ir_version_prerelease()) {
      if (ir_version_prerelease_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ir_version_prerelease_->clear();
      }
    }
    if (has_ir_build_metadata()) {
      if (ir_build_metadata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ir_build_metadata_->clear();
      }
    }
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        domain_->clear();
      }
    }
    opset_version_ = GOOGLE_LONGLONG(0);
    if (has_doc_string()) {
      if (doc_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        doc_string_->clear();
      }
    }
  }
  operator__.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OperatorSetProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.OperatorSetProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string magic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_magic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->magic().data(), this->magic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "magic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ir_version;
        break;
      }

      // optional int32 ir_version = 2;
      case 2: {
        if (tag == 16) {
         parse_ir_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ir_version_)));
          set_has_ir_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ir_version_prerelease;
        break;
      }

      // optional string ir_version_prerelease = 3;
      case 3: {
        if (tag == 26) {
         parse_ir_version_prerelease:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ir_version_prerelease()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ir_version_prerelease().data(), this->ir_version_prerelease().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ir_version_prerelease");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_domain;
        break;
      }

      // optional string domain = 4;
      case 4: {
        if (tag == 34) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_opset_version;
        break;
      }

      // optional int64 opset_version = 5;
      case 5: {
        if (tag == 40) {
         parse_opset_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &opset_version_)));
          set_has_opset_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (tag == 50) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ir_build_metadata;
        break;
      }

      // optional string ir_build_metadata = 7;
      case 7: {
        if (tag == 58) {
         parse_ir_build_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ir_build_metadata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ir_build_metadata().data(), this->ir_build_metadata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ir_build_metadata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_operator;
        break;
      }

      // repeated .onnx.OperatorProto operator = 8;
      case 8: {
        if (tag == 66) {
         parse_operator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_operator_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_operator;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.OperatorSetProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.OperatorSetProto)
  return false;
#undef DO_
}

void OperatorSetProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.OperatorSetProto)
  // optional string magic = 1;
  if (has_magic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), this->magic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "magic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->magic(), output);
  }

  // optional int32 ir_version = 2;
  if (has_ir_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ir_version(), output);
  }

  // optional string ir_version_prerelease = 3;
  if (has_ir_version_prerelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_version_prerelease().data(), this->ir_version_prerelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ir_version_prerelease");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ir_version_prerelease(), output);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain(), output);
  }

  // optional int64 opset_version = 5;
  if (has_opset_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->opset_version(), output);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // optional string ir_build_metadata = 7;
  if (has_ir_build_metadata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_build_metadata().data(), this->ir_build_metadata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ir_build_metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ir_build_metadata(), output);
  }

  // repeated .onnx.OperatorProto operator = 8;
  for (int i = 0; i < this->operator__size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->operator_(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.OperatorSetProto)
}

::google::protobuf::uint8* OperatorSetProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onnx.OperatorSetProto)
  // optional string magic = 1;
  if (has_magic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), this->magic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "magic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->magic(), target);
  }

  // optional int32 ir_version = 2;
  if (has_ir_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ir_version(), target);
  }

  // optional string ir_version_prerelease = 3;
  if (has_ir_version_prerelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_version_prerelease().data(), this->ir_version_prerelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ir_version_prerelease");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ir_version_prerelease(), target);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain(), target);
  }

  // optional int64 opset_version = 5;
  if (has_opset_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->opset_version(), target);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // optional string ir_build_metadata = 7;
  if (has_ir_build_metadata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_build_metadata().data(), this->ir_build_metadata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ir_build_metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ir_build_metadata(), target);
  }

  // repeated .onnx.OperatorProto operator = 8;
  for (int i = 0; i < this->operator__size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->operator_(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.OperatorSetProto)
  return target;
}

int OperatorSetProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string magic = 1;
    if (has_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->magic());
    }

    // optional int32 ir_version = 2;
    if (has_ir_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ir_version());
    }

    // optional string ir_version_prerelease = 3;
    if (has_ir_version_prerelease()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ir_version_prerelease());
    }

    // optional string ir_build_metadata = 7;
    if (has_ir_build_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ir_build_metadata());
    }

    // optional string domain = 4;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional int64 opset_version = 5;
    if (has_opset_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->opset_version());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated .onnx.OperatorProto operator = 8;
  total_size += 1 * this->operator__size();
  for (int i = 0; i < this->operator__size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->operator_(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorSetProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OperatorSetProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OperatorSetProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OperatorSetProto::MergeFrom(const OperatorSetProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  operator__.MergeFrom(from.operator__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magic()) {
      set_magic(from.magic());
    }
    if (from.has_ir_version()) {
      set_ir_version(from.ir_version());
    }
    if (from.has_ir_version_prerelease()) {
      set_ir_version_prerelease(from.ir_version_prerelease());
    }
    if (from.has_ir_build_metadata()) {
      set_ir_build_metadata(from.ir_build_metadata());
    }
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_opset_version()) {
      set_opset_version(from.opset_version());
    }
    if (from.has_doc_string()) {
      set_doc_string(from.doc_string());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OperatorSetProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorSetProto::CopyFrom(const OperatorSetProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperatorSetProto::IsInitialized() const {

  return true;
}

void OperatorSetProto::Swap(OperatorSetProto* other) {
  if (other != this) {
    std::swap(magic_, other->magic_);
    std::swap(ir_version_, other->ir_version_);
    std::swap(ir_version_prerelease_, other->ir_version_prerelease_);
    std::swap(ir_build_metadata_, other->ir_build_metadata_);
    std::swap(domain_, other->domain_);
    std::swap(opset_version_, other->opset_version_);
    std::swap(doc_string_, other->doc_string_);
    operator__.Swap(&other->operator__);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OperatorSetProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperatorSetProto_descriptor_;
  metadata.reflection = OperatorSetProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace onnx

// @@protoc_insertion_point(global_scope)
