create
******


Description
===========

Creates a new IPSec connection between the specified DRG and CPE. For
more information, see IPSec VPNs.

In the request, you must include at least one static route to the CPE
object (you're allowed a maximum of 10). For example: 10.0.8.0/16.

For the purposes of access control, you must provide the OCID of the
compartment where you want the IPSec connection to reside. Notice that
the IPSec connection doesn't have to be in the same compartment as the
DRG, CPE, or other Networking Service components. If you're not sure
which compartment to use, put the IPSec connection in the same
compartment as the DRG. For more information about compartments and
access control, see Overview of the IAM Service. For information about
OCIDs, see Resource Identifiers.

You may optionally specify a *display name* for the IPSec connection,
otherwise a default is provided. It does not have to be unique, and
you can change it. Avoid entering confidential information.

After creating the IPSec connection, you need to configure your on-
premises router with tunnel-specific information returned by
GetIPSecConnectionDeviceConfig. For each tunnel, that operation gives
you the IP address of Oracle's VPN headend and the shared secret (that
is, the pre-shared key). For more information, see Configuring Your
On-Premises Router for an IPSec VPN.

To get the status of the tunnels (whether they're up or down), use
GetIPSecConnectionDeviceStatus.


Usage
=====

   oci network ip-sec-connection create [OPTIONS]


Options
=======


--compartment-id, -c [text]
---------------------------

The OCID of the compartment to contain the IPSec connection.
[required]


--cpe-id [text]
---------------

The OCID of the CPE. [required]


--drg-id [text]
---------------

The OCID of the DRG. [required]


--static-routes [complex type]
------------------------------

Static routes to the CPE. At least one route must be included. The
CIDR must not be a multicast address or class E address. This must be
provided in JSON format.

Example: '["10.0.0.0/16"]'


--display-name [text]
---------------------

A user-friendly name. Does not have to be unique, and it's changeable.
Avoid entering confidential information.


--wait-for-state [PROVISIONING|AVAILABLE|TERMINATING|TERMINATED]
----------------------------------------------------------------

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state.


--max-wait-seconds [integer]
----------------------------

The maximum time to wait for the resource to reach the lifecycle state
defined by --wait-for-state. Defaults to 1200 seconds.


--wait-interval-seconds [integer]
---------------------------------

Check every --wait-interval-seconds to see whether the resource to see
if it has reached the lifecycle state defined by --wait-for-state.
Defaults to 30 seconds.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used


-?, -h, --help
--------------

Show this message and exit.
