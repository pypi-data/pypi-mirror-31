# AUTOGENERATED
from typing import NamedTuple, List, Optional, Iterable
from enum import Enum

from protobuf_gen.abstract import Message
from etcd3wrapper._autogen.etcd.mvcc.mvccpb import kv_pb2


# Messages


class KeyValue(Message):
    pb_cls = kv_pb2.KeyValue

    __slots__ = ['key', 'create_revision', 'mod_revision', 'version', 'value', 'lease']

    def __init__(
        self,
        key: bytes = b'',
        create_revision: int = 0,
        mod_revision: int = 0,
        version: int = 0,
        value: bytes = b'',
        lease: int = 0
    ):
        self.key = key
        self.create_revision = create_revision
        self.mod_revision = mod_revision
        self.version = version
        self.value = value
        self.lease = lease

    @classmethod
    def get_slot_types(cls):
        return [bytes, int, int, int, bytes, int]


class Event(Message):
    pb_cls = kv_pb2.Event

    __slots__ = ['type', 'kv', 'prev_kv']

    class EventType(Enum):
        PUT = 0
        DELETE = 1

    def __init__(
        self,
        type: 'EventType' = EventType.PUT,
        kv: Optional['KeyValue'] = None,
        prev_kv: Optional['KeyValue'] = None
    ):
        self.type = type
        self.kv = kv
        self.prev_kv = prev_kv

    @classmethod
    def get_slot_types(cls):
        return [cls.EventType, KeyValue, KeyValue]
