[tox]
envlist = py35, py36, py37, py3-cover, coverage, py35-sqlite, style

[testenv]
sitepackages = false
basepython =
    py35: python3.5
    py36: python3.6
setenv =
    PYTHONHASHSEED = 100
passenv = RANDOM_VALUE FACEBOOK_CONSUMER_KEY FACEBOOK_CONSUMER_SECRET FACEBOOK_USER FACEBOOK_PASSWORD COVERAGE_PROCESS_START CODECOV_TOKEN DISPLAY SPLINTER_WEBDRIVER TRAVIS

usedevelop = true

deps =
    .[notebook]
    flaky
    pytest>3
    pytest-runner
# These fixes support for Chrome headless mode
# https://github.com/cobrateam/splinter/issues/554
    --editable=git+https://github.com/websauna/pytest-splinter.git#egg=pytest-splinter
    --editable=git+https://github.com/websauna/splinter.git#egg=splinter
    webtest
    coverage
    pytest-timeout
    pytest-cov
    codecov
    celery[redis]>=4.0.0rc6
    pyramid>1.9
    selenium>3
    # TODO: Temporary workaround for some Travis CI issue, should get picked up from setup.py
    cookiecutter
    flake8
    isort
    sqlalchemy-utils


# TBD: Our CI system does not have ability to share screenshots as artifacts, so we don't want to create them
commands =
    pip freeze
    echo "Running tests for PostgreSQL"
    py.test \
        --timeout=300 \
        --durations=10 \
        --cov-report xml \
        --cov websauna \
        --cov-config .coveragerc \
        {posargs}


# TODO: Hardcoded for Chrome now, as did not figure out sensible way to pass this through .travis.yml
[testenv:py35-sqlite]
basepython = python3.5
commands =
    echo "Running tests for SQLite"
    py.test \
        -x \
        --timeout=300 \
        --durations=10 \
        --splinter-webdriver=chrome \
        --splinter-headless=true \
        --ini=websauna/conf/test-sqlite.ini

[testenv:py37]
basepython = python3.7
commands =
    pip freeze
    echo "Running tests for PostgreSQL"
    py.test \
        --timeout=300 \
        --durations=10 \
        {posargs}


[testenv:style]
basepython = python3.6
commands =
    flake8 websauna/
