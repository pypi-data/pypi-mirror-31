Metadata-Version: 1.0
Name: pygtm
Version: 0.0.2
Summary: A python implementation of Generative Topographic Mapping.
Home-page: https://github.com/amaotone/pygtm
Author: Amane Suzuki
Author-email: amane.suzu@gmail.com
License: Copyright (c) 2018 Amane Suzuki

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
Description: # PyGTM
        
        A python implementation of Generative Topographic Mapping.
        
        **This is beta release.**
        For example, this project has no test as you can see.
        
        ## Requirements
        
        - numpy
        - scipy
        - scikit-learn
        
        ## Getting Started
        
        To install PyGTM, use `pip`
        
        ```bash
        $ pip install -U pygtm
        ```
        
        The pygtm package inherits scikit-learn classes.
        
        ```python
        from pygtm import GTM
        from sklearn.datasets import load_iris
        from sklearn.preprocessing import StandardScaler
        from sklearn.pipeline import make_pipeline
        
        iris = load_iris()
        model = make_pipeline(
            StandardScaler(),
            GTM(n_components=2)
        )
        embedding = model.fit_transform(iris.data)
        ```
        
        ## References
        
        - [GTM: The Generative Topographic Mapping](https://www.microsoft.com/en-us/research/publication/gtm-the-generative-topographic-mapping/)
        - [Development of the Generative Topographic Mapping](https://www.microsoft.com/en-us/research/publication/developments-of-the-generative-topographic-mapping/)
Platform: UNKNOWN
