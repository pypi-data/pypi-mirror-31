###############################################################################
## General Section
###############################################################################

[General]

# An optional unique identifier used to identify the opendxl-elasticsearch
# service on the DXL fabric. If set, this unique identifier will be
# appended to the name of each request topic added to the fabric. For example,
# if the serviceUniqueId is set to "sample", the request topic names would
# start with the following:
#
#  /opendxl-elasticsearch/service/elasticsearch-api/sample/<method>
#
# If serviceUniqueId is not set, request topic names would not include an id
# segment, for example:
#
#  /opendxl-elasticsearch/service/elasticsearch-api/<method>
;serviceUniqueId=<unique-id-to-use-for-topic-names>

# The list of Elasticsearch servers to expose to the DXL fabric, delimited by
# commas.
#
# For example: es1,es2,es3
#
# For each name specified, a corresponding section must be defined within this
# configuration file that provides detailed information about the server.
serverNames=es1

# The list of event groups for which any DXL events received are indexed to
# Elasticsearch, delimited by commas.
#
# For example: eventgroup1,eventgroup2,eventgroup3
#
# For each name specified, a corresponding section must be defined within this
# configuration file that provides detailed information about the event group.
eventGroupNames=basic_event_example,advanced_transform_example

# The list of Elasticsearch APIs for which corresponding request topics should
# be exposed to the DXL fabric.
#
# For example: index,get,update,delete
#
# With this example and the "serviceUniqueId" setting set to "sample", the
# request topics exposed to the DXL fabric would be:
#
#  /opendxl-elasticsearch/service/elasticsearch-api/sample/index
#  /opendxl-elasticsearch/service/elasticsearch-api/sample/get
#  /opendxl-elasticsearch/service/elasticsearch-api/sample/update
#  /opendxl-elasticsearch/service/elasticsearch-api/sample/delete
#
# The total list of available API method names and parameters is at:
# https://elasticsearch-py.readthedocs.io/en/master/api.html#elasticsearch.
#
# For each name specified, a corresponding section must be defined within this
# configuration file that provides detailed information about the event group.
apiNames=index,get,update,delete

# Controls whether or not changes made to event group transform scripts while
# the service is running can be reloaded dynamically. Setting this to "yes"
# can be helpful to reduce service restarts while developing a transform
# script. (optional, defaults to "no" -- load transform scripts only at service
# startup time)
reloadTransformScriptsOnChange=yes

###############################################################################
## Server section (one section for each name specified in "serverNames"
###############################################################################

[es1]

# The Elasticsearch server hostname or IP address
host=<Elasticsearch-server-hostname-or-ip-address>

# The Elasticsearch server HTTP API port (optional, defaults to 9200)
;port=9200

# The URL prefix under which the Elasticsearch server's HTTP API is hosted.
# For example, if this were set to "api", requests that the OpenDXL
# Elasticsearch service makes to the Elasticsearch server would start with the
# following: http(s)://<host>:<port>/api. (optional, defaults to no prefix,
# making requests to the root path.)
;urlPrefix=api

# The name of the user used when making requests to the Elasticsearch server.
# (Optional, defaults to no user name. Required if "password" is specified.)
;user=elastic

# The password associated with the user used when making requests to the
# Elasticsearch server. (Optional, defaults to no password. Required if
# "user" is specified.)
;password=elasticpassword

# Whether or not to use SSL/TLS for requests made to the Elasticsearch server.
# If set to "yes", SSL/TLS is used. (optional, defaults to "no")
;useSSL=no

# Whether to verify that Elasticsearch server's certificate was signed by a
# valid certificate authority when SSL/TLS is being used.
# (optional, enabled by default)
;verifyCertificate=yes

# A path to a CA Bundle file containing certificates of trusted CAs. The CA
# Bundle is used to ensure that the Elasticsearch server being connected to was
# signed by a valid authority. (optional, only applicable if
# "verifyCertificate" is "yes")
;verifyCertBundle=<path-to-bundle-file>

# Controls how the name in the Elasticsearch server's certificate is
# validated if SSL/TLS is being used. If set to "yes" or not specified, the
# name must match the value in the "host" setting. If set to "no", the hostname
# is not validated. If set to a different value, the hostname must match the
# value in the setting. For example, if the value is set to "myserver", the
# name in the Elasticsearch server certificate must be "myserver" in order
# for the connection to be allowed.
;verifyHostName=yes

# A path to a client certificate supplied to the Elasticsearch server for
# TLS/SSL connections. (optional, defaults to not using a client certificate)
;clientCertificate=<path-to-certificate-file>

# A path to a client private key used for TLS/SSL connections made to the
# Elasticsearch server. (optional, defaults to not using a client private key)
;clientKey=<path-to-private-key>

###############################################################################
## Event group section (one section for each name in "eventGroupNames")
###############################################################################

[basic_event_example]

# The list of topics to subscribe to the DXL fabric for event notifications,
# delimited by commas.
#
# For example: es1,es2,es3
#
# For each event notification received, corresponding documents with the event
# payload are indexed to Elasticsearch.
topics=/sample/elasticsearch/basicevent

# Index to use in storing the event document to Elasticsearch. See:
# https://www.elastic.co/guide/en/elasticsearch/guide/current/_document_metadata.html#_index
documentIndex=opendxl-elasticsearch-service-examples

# Type of the document to store to Elasticsearch. See:
# https://www.elastic.co/guide/en/elasticsearch/guide/current/_document_metadata.html#_type
documentType=basic-event-example-doc

# Name of the field in the event payload whose corresponding value should be
# used as the ID of the document stored to Elasticsearch. See:
# https://github.com/elastic/elasticsearch-definitive-guide/edit/2.x/030_Data/05_Document.asciidoc
# (optional, defaults to using an unique ID that Elasticsearch automatically
# generates)
#
# For example, an event payload may have the following content:
#
# { "myid": "12345", "mytext": "hello world" }
#
# If "idFieldName" is set to "myid", the value "12345" would be extracted from
# the payload and used as the document ID. If "idFieldName" is set but the
# value cannot be found in the event payload, the document will not be stored.
#
# Note that the "idFieldName" can currently only refer to a key which exists
# at the top-level of the event payload. In order to map the ID from a field
# which appears in a nested structure in the event payload, a transformScript
# would need to be used.
idFieldName=event_id

# Path to a Python script which will receive the event payload and optionally
# transform it into zero, one, or more documents for storage into Elasticsearch.
# (optional, defaults to no transform script being used)
;transformScript=

[advanced_transform_example]

# The list of topics to subscribe to the DXL fabric for event notifications,
# delimited by commas.
#
# For example: es1,es2,es3
#
# For each event notification received, corresponding documents with the event
# payload are indexed to Elasticsearch.
topics=/sample/elasticsearch/advancedtransform

# Index to use in storing the event document to Elasticsearch. See:
# https://www.elastic.co/guide/en/elasticsearch/guide/current/_document_metadata.html#_index
documentIndex=opendxl-elasticsearch-service-examples

# Type of the document to store to Elasticsearch. See:
# https://www.elastic.co/guide/en/elasticsearch/guide/current/_document_metadata.html#_type
documentType=advanced-transform-example-doc

# Name of the field in the event payload whose corresponding value should be
# used as the ID of the document stored to Elasticsearch. See:
# https://www.elastic.co/guide/en/elasticsearch/guide/current/_document_metadata.html#_id
# (optional, defaults to using an unique ID that Elasticsearch automatically
# generates)
#
# For example, an event payload may have the following content:
#
# { "myid": "12345", "mytext": "hello world" }
#
# If "idFieldName" is set to "myid", the value "12345" would be extracted from
# the payload and used as the document ID. If "idFieldName" is set but the
# value cannot be found in the event payload, the document will not be stored.
;idFieldName=

# Path to a Python script which will receive the event payload and optionally
# transform it into documents to be stored into Elasticsearch.
# (optional, defaults to no transform script being used). The transform
# script must define an "on_event" function which accepts two parameters: the
# dxlclient.message.Event object received for the event callback and a
# dictionary containing a default set of parameters for a corresponding
# document to be stored to Elasticsearch.
transformScript=advanced_transform_example_script.py

###############################################################################
## Settings for thread pools
###############################################################################

[MessageCallbackPool]

# The queue size for invoking DXL message callbacks
# (optional, defaults to 1000)
;queueSize=1000

# The number of threads available to invoke DXL message callbacks
# (optional, defaults to 10)
;threadCount=10

[IncomingMessagePool]

# The queue size for incoming DXL messages
# (optional, defaults to 1000)
;queueSize=1000

# The number of threads available to handle incoming DXL messages
# (optional, defaults to 10)
;threadCount=10
