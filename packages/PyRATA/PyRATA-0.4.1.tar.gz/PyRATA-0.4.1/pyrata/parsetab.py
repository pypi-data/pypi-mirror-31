
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'stepleftLBRACKETRBRACKETleftORleftANDleftLPARENRPARENrightNOTleftEQAFTER_LAST_TOKEN AND ANY ATLEASTONE BEFORE_FIRST_TOKEN CHUNK EQ IN LBRACKET LPAREN MATCH NAME NOT OPTION OR RBRACKET RPAREN VALUEstep : single_constraint\n            | LBRACKET constraint_class RBRACKET constraint_class : constraint_class AND constraint_class_part\n            | constraint_class OR constraint_class_part \n            | constraint_class_part constraint_class_part : single_constraint\n                    | LPAREN constraint_class RPAREN  \n                    | NOT constraint_class single_constraint : NAME EQ VALUE \n                          | NAME MATCH VALUE\n                          | NAME IN VALUE'
    
_lr_action_items = {'RBRACKET':([6,8,9,13,18,19,20,21,22,23,],[-5,-6,17,-8,-11,-9,-10,-7,-4,-3,]),'VALUE':([10,11,12,],[18,19,20,]),'EQ':([3,],[11,]),'NOT':([1,5,7,15,16,],[5,5,5,5,5,]),'$end':([2,4,17,18,19,20,],[-1,0,-2,-11,-9,-10,]),'MATCH':([3,],[12,]),'NAME':([0,1,5,7,15,16,],[3,3,3,3,3,3,]),'OR':([6,8,9,13,14,18,19,20,21,22,23,],[-5,-6,15,-8,15,-11,-9,-10,-7,-4,-3,]),'LPAREN':([1,5,7,15,16,],[7,7,7,7,7,]),'AND':([6,8,9,13,14,18,19,20,21,22,23,],[-5,-6,16,-8,16,-11,-9,-10,-7,-4,-3,]),'IN':([3,],[10,]),'LBRACKET':([0,],[1,]),'RPAREN':([6,8,13,14,18,19,20,21,22,23,],[-5,-6,-8,21,-11,-9,-10,-7,-4,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constraint_class_part':([1,5,7,15,16,],[6,6,6,22,23,]),'single_constraint':([0,1,5,7,15,16,],[2,8,8,8,8,8,]),'constraint_class':([1,5,7,],[9,13,14,]),'step':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> step","S'",1,None,None,None),
  ('step -> single_constraint','step',1,'p_step','syntactic_step_parser.py',126),
  ('step -> LBRACKET constraint_class RBRACKET','step',3,'p_step','syntactic_step_parser.py',127),
  ('constraint_class -> constraint_class AND constraint_class_part','constraint_class',3,'p_constraint_class','syntactic_step_parser.py',151),
  ('constraint_class -> constraint_class OR constraint_class_part','constraint_class',3,'p_constraint_class','syntactic_step_parser.py',152),
  ('constraint_class -> constraint_class_part','constraint_class',1,'p_constraint_class','syntactic_step_parser.py',153),
  ('constraint_class_part -> single_constraint','constraint_class_part',1,'p_constraint_class_part','syntactic_step_parser.py',180),
  ('constraint_class_part -> LPAREN constraint_class RPAREN','constraint_class_part',3,'p_constraint_class_part','syntactic_step_parser.py',181),
  ('constraint_class_part -> NOT constraint_class','constraint_class_part',2,'p_constraint_class_part','syntactic_step_parser.py',182),
  ('single_constraint -> NAME EQ VALUE','single_constraint',3,'p_single_constraint','syntactic_step_parser.py',207),
  ('single_constraint -> NAME MATCH VALUE','single_constraint',3,'p_single_constraint','syntactic_step_parser.py',208),
  ('single_constraint -> NAME IN VALUE','single_constraint',3,'p_single_constraint','syntactic_step_parser.py',209),
]
