CHANGES
=======

0.1.0b8
-------

* Implemented complete API coverage without any validity checking on inputs.
* Expanded tests to improve coverage.

0.1.0b7
-------

* Fixed a change that somehow got undone in README. Hopefully this will fix the README on PyPI.

0.1.0b6
-------

* May have finally fixed README.

0.1.0b5
-------

* Started manually filling out the change log, including back-filling some old versions.
* May have fixed README text rendering for PyPI
* Updated import behavior so that SpaceTrackClient comes in under `import spacetracktool`.

0.1.0b4
-------

* Integrated Coveralls test coverage.

0.1.0b3
-------

* Integrated Travis CI for builds.

0.1.0b1
-------

* Updated ChangeLog with setup.py
* Updated unit tests, fixed some bugs all over the place

0.1.0b0
-------

* Updated changelog via setup.py
* Updated authors and changelog via setup.py
* Updated README and setup.cfg
* Fixed a bug in operations, updated doc strings in spacetracktool
* Refactored from classes per query type to a single client with different query methods. Moved common operations to a separate module

0.1.0a1
-------

* Committing AUTHORS and ChangeLog

0.1.0a0
-------

* Updated docs to new name
* Renamed files to match new repo name
* Updated URL to reflect new repo name
* Added [build\_sphinx] options to setup.cfg
* Update setup.cfg
* Update setup.cfg
* Update setup.cfg
* Update setup.py
* Maybe fixed syntax highlighting
* Added syntax highlighting to README
* Updated readme file, minor refactoring in spacetrack.py
* Added requests to requirements.txt
* Removed Jupyter notebook used for early testing
* Create setup.cfg
* Create setup.py
* Create requirements.txt
* Moved source files to spacetrack folder, renamed package to 'spacetrack' from 'space\_track', added autodocs from Sphinx
* More boilerplate, started to implement things as mixin classes
* Added boilerplate for a lot of LTE query types
* Started adding some tests
* Moved workspace over to the Python script. Keeping the notebook around for prototyping for now
* Create \_\_init\_\_.py
* Create LICENSE
* Started filling out classes for each query type
* Added starters for each of the different query classes exposed by the API
* Staring to sketch out the class in a notebook
* Initial commit
