# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBModeImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkBModeImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkBModeImageFilterPython')
    _itkBModeImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBModeImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBModeImageFilterPython
            return _itkBModeImageFilterPython
        try:
            _mod = imp.load_module('_itkBModeImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkBModeImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBModeImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFrequencyDomain1DImageFilterPython
import itkFrequencyDomain1DFilterFunctionPython
import ITKCommonBasePython
import pyBasePython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageRegionPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import stdcomplexPython
import itkImagePython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkCovariantVectorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkImageToImageFilterCommonPython
import itkCurvilinearArraySpecialCoordinatesImagePython
import itkContinuousIndexPython
import ITKIOImageBaseBasePython
import itkTransformBasePython
import itkDiffusionTensor3DPython
import itkArrayPython
import itkArray2DPython
import itkOptimizerParametersPython
import itkSimpleDataObjectDecoratorPython
import itkSpectra1DSupportWindowImageFilterPython
import itkImageToImageFilterAPython

def itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_New():
  return itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.New()


def itkBModeImageFilterIF3IF3_New():
  return itkBModeImageFilterIF3IF3.New()


def itkBModeImageFilterIF2IF2_New():
  return itkBModeImageFilterIF2IF2.New()

class itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2(itkCurvilinearArraySpecialCoordinatesImagePython.itkCastImageFilterCASCIF2CASCIF2_Superclass_Superclass):
    """Proxy of C++ itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Pointer":
        """__New_orig__() -> itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Pointer"""
        return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Pointer":
        """Clone(itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 self) -> itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Pointer"""
        return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Clone(self)


    def SetDirection(self, direction: 'unsigned int') -> "void":
        """SetDirection(itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 self, unsigned int direction)"""
        return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_SetDirection(self, direction)


    def GetDirection(self) -> "unsigned int":
        """GetDirection(itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 self) -> unsigned int"""
        return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_GetDirection(self)


    def SetFrequencyFilter(self, filter: 'itkFrequencyDomain1DImageFilterCASCICFCASCICF') -> "void":
        """SetFrequencyFilter(itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 self, itkFrequencyDomain1DImageFilterCASCICFCASCICF filter)"""
        return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_SetFrequencyFilter(self, filter)

    __swig_destroy__ = _itkBModeImageFilterPython.delete_itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2

    def cast(obj: 'itkLightObject') -> "itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 *":
        """cast(itkLightObject obj) -> itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2"""
        return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 *":
        """GetPointer(itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 self) -> itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2"""
        return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2

        Create a new object of the class itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.Clone = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Clone, None, itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2)
itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.SetDirection = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_SetDirection, None, itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2)
itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.GetDirection = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_GetDirection, None, itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2)
itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.SetFrequencyFilter = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_SetFrequencyFilter, None, itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2)
itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2.GetPointer = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_GetPointer, None, itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2)
itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_swigregister = _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_swigregister
itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_swigregister(itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2)

def itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2___New_orig__() -> "itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Pointer":
    """itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2___New_orig__() -> itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_Pointer"""
    return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2___New_orig__()

def itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_cast(obj: 'itkLightObject') -> "itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2 *":
    """itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_cast(itkLightObject obj) -> itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2"""
    return _itkBModeImageFilterPython.itkBModeImageFilterCASCIF2CASCIF2CASCcomplexIF2_cast(obj)

class itkBModeImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkBModeImageFilterIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBModeImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkBModeImageFilterIF2IF2_Pointer"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBModeImageFilterIF2IF2_Pointer":
        """Clone(itkBModeImageFilterIF2IF2 self) -> itkBModeImageFilterIF2IF2_Pointer"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_Clone(self)


    def SetDirection(self, direction: 'unsigned int') -> "void":
        """SetDirection(itkBModeImageFilterIF2IF2 self, unsigned int direction)"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_SetDirection(self, direction)


    def GetDirection(self) -> "unsigned int":
        """GetDirection(itkBModeImageFilterIF2IF2 self) -> unsigned int"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_GetDirection(self)


    def SetFrequencyFilter(self, filter: 'itkFrequencyDomain1DImageFilterICF2ICF2') -> "void":
        """SetFrequencyFilter(itkBModeImageFilterIF2IF2 self, itkFrequencyDomain1DImageFilterICF2ICF2 filter)"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_SetFrequencyFilter(self, filter)

    __swig_destroy__ = _itkBModeImageFilterPython.delete_itkBModeImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkBModeImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkBModeImageFilterIF2IF2"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBModeImageFilterIF2IF2 *":
        """GetPointer(itkBModeImageFilterIF2IF2 self) -> itkBModeImageFilterIF2IF2"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBModeImageFilterIF2IF2

        Create a new object of the class itkBModeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBModeImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBModeImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBModeImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBModeImageFilterIF2IF2.Clone = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_Clone, None, itkBModeImageFilterIF2IF2)
itkBModeImageFilterIF2IF2.SetDirection = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_SetDirection, None, itkBModeImageFilterIF2IF2)
itkBModeImageFilterIF2IF2.GetDirection = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_GetDirection, None, itkBModeImageFilterIF2IF2)
itkBModeImageFilterIF2IF2.SetFrequencyFilter = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_SetFrequencyFilter, None, itkBModeImageFilterIF2IF2)
itkBModeImageFilterIF2IF2.GetPointer = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_GetPointer, None, itkBModeImageFilterIF2IF2)
itkBModeImageFilterIF2IF2_swigregister = _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_swigregister
itkBModeImageFilterIF2IF2_swigregister(itkBModeImageFilterIF2IF2)

def itkBModeImageFilterIF2IF2___New_orig__() -> "itkBModeImageFilterIF2IF2_Pointer":
    """itkBModeImageFilterIF2IF2___New_orig__() -> itkBModeImageFilterIF2IF2_Pointer"""
    return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2___New_orig__()

def itkBModeImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkBModeImageFilterIF2IF2 *":
    """itkBModeImageFilterIF2IF2_cast(itkLightObject obj) -> itkBModeImageFilterIF2IF2"""
    return _itkBModeImageFilterPython.itkBModeImageFilterIF2IF2_cast(obj)

class itkBModeImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkBModeImageFilterIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBModeImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkBModeImageFilterIF3IF3_Pointer"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBModeImageFilterIF3IF3_Pointer":
        """Clone(itkBModeImageFilterIF3IF3 self) -> itkBModeImageFilterIF3IF3_Pointer"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_Clone(self)


    def SetDirection(self, direction: 'unsigned int') -> "void":
        """SetDirection(itkBModeImageFilterIF3IF3 self, unsigned int direction)"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_SetDirection(self, direction)


    def GetDirection(self) -> "unsigned int":
        """GetDirection(itkBModeImageFilterIF3IF3 self) -> unsigned int"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_GetDirection(self)


    def SetFrequencyFilter(self, filter: 'itkFrequencyDomain1DImageFilterICF3ICF3') -> "void":
        """SetFrequencyFilter(itkBModeImageFilterIF3IF3 self, itkFrequencyDomain1DImageFilterICF3ICF3 filter)"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_SetFrequencyFilter(self, filter)

    __swig_destroy__ = _itkBModeImageFilterPython.delete_itkBModeImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkBModeImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkBModeImageFilterIF3IF3"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBModeImageFilterIF3IF3 *":
        """GetPointer(itkBModeImageFilterIF3IF3 self) -> itkBModeImageFilterIF3IF3"""
        return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBModeImageFilterIF3IF3

        Create a new object of the class itkBModeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBModeImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBModeImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBModeImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBModeImageFilterIF3IF3.Clone = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_Clone, None, itkBModeImageFilterIF3IF3)
itkBModeImageFilterIF3IF3.SetDirection = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_SetDirection, None, itkBModeImageFilterIF3IF3)
itkBModeImageFilterIF3IF3.GetDirection = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_GetDirection, None, itkBModeImageFilterIF3IF3)
itkBModeImageFilterIF3IF3.SetFrequencyFilter = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_SetFrequencyFilter, None, itkBModeImageFilterIF3IF3)
itkBModeImageFilterIF3IF3.GetPointer = new_instancemethod(_itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_GetPointer, None, itkBModeImageFilterIF3IF3)
itkBModeImageFilterIF3IF3_swigregister = _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_swigregister
itkBModeImageFilterIF3IF3_swigregister(itkBModeImageFilterIF3IF3)

def itkBModeImageFilterIF3IF3___New_orig__() -> "itkBModeImageFilterIF3IF3_Pointer":
    """itkBModeImageFilterIF3IF3___New_orig__() -> itkBModeImageFilterIF3IF3_Pointer"""
    return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3___New_orig__()

def itkBModeImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkBModeImageFilterIF3IF3 *":
    """itkBModeImageFilterIF3IF3_cast(itkLightObject obj) -> itkBModeImageFilterIF3IF3"""
    return _itkBModeImageFilterPython.itkBModeImageFilterIF3IF3_cast(obj)



